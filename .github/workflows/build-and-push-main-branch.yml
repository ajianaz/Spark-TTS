name: Build and Push Docker Image (Spark-TTS)

on:
  push:
    branches:
      - main

jobs:
  # Job 1: Prepare and Build Docker Image
  prepare-build:
    runs-on: ubuntu-latest

    outputs:
      cache-key: ${{ steps.set-cache-key.outputs.cache-key }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set Version
        run: |
          VERSION=${{ secrets.VERSION || '0.0.2' }}
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Set Cache Key
        id: set-cache-key
        run: echo "cache-key=${{ runner.os }}-docker-${{ github.sha }}" >> $GITHUB_ENV

      - name: Cache Docker Layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-docker-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-docker-

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker Image with Cache
        run: |
          docker buildx build \
            --cache-from=type=local,src=/tmp/.buildx-cache \
            --cache-to=type=local,dest=/tmp/.buildx-cache-new \
            -t ghcr.io/${{ github.actor }}/spark-tts:${{ secrets.VERSION || '0.0.2' }} \
            -t ghcr.io/${{ github.actor }}/spark-tts:latest \
            --load .

      - name: Move Cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Save Cache
        uses: actions/upload-artifact@v3
        with:
          name: docker-cache
          path: /tmp/.buildx-cache

  # Job 2: Push Docker Image
  push-image:
    needs: prepare-build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        run: echo "${{ secrets.GHCR_PAT }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Download Docker Cache
        uses: actions/download
